2019-06-02 10:54:53,187 3d-object-detection INFO: Using 6 GPUs
2019-06-02 10:54:53,187 3d-object-detection INFO: Namespace(cfg='configs/car_fhd_kitti.yaml', distributed=True, local_rank=0, model_dir='kitti')
2019-06-02 10:54:53,188 3d-object-detection INFO: Collecting env info (might take some time)
2019-06-02 10:54:57,511 3d-object-detection INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: version 3.13.4

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration: 
GPU 0: GeForce RTX 2080 Ti
GPU 1: GeForce RTX 2080 Ti
GPU 2: GeForce RTX 2080 Ti
GPU 3: GeForce RTX 2080 Ti
GPU 4: GeForce RTX 2080 Ti
GPU 5: GeForce RTX 2080 Ti
GPU 6: GeForce RTX 2080 Ti
GPU 7: GeForce RTX 2080 Ti

Nvidia driver version: 418.40.04
cuDNN version: /data/cuda/cuda-10.0/cudnn/v7.5.0/lib64/libcudnn.so.7.5.0

Versions of relevant libraries:
[pip3] numpy==1.16.2
[pip3] numpydoc==0.8.0
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2019.3                      199  
[conda] mkl-service               1.1.2            py37he904b0f_5  
[conda] mkl_fft                   1.0.10           py37ha843d7b_0  
[conda] mkl_random                1.0.2            py37hd81dba3_0  
[conda] torch                     1.1.0                    pypi_0    pypi
[conda] torchvision               0.3.0                    pypi_0    pypi
        Pillow (5.4.1)
2019-06-02 10:54:57,512 3d-object-detection INFO: 
local_rank: 0
input:
    num_point_features: 4
    voxel:
        voxel_size: [0.05, 0.05, 0.1]
        point_cloud_range: [0, -40.0, -3.0, 70.4, 40.0, 1.0]
        max_num_points: 5
    train:
        batch_size: 2
        num_epochs: 100
        dataset:
            type: "KittiDataset"
            root_path: "/data/datasets/KITTI/object"
            info_path: "/data/datasets/KITTI/object/kitti_infos_train.pkl"
            nsweeps: 1
        preprocess:
            max_num_voxels: 40000
            shuffle: False
            num_workers: 3
            gt_location_noise: [1.0, 1.0, 0.5]
            gt_rotation_noise: [-0.78539816, 0.78539816]
            global_rotation_noise: [-0.78539816, 0.78539816]
            global_scale_noise: [0.95, 1.05]
            global_rotation_per_object_range: [0, 0]
            global_translation_noise: [0, 0, 0]
            anchor_area_threshold: -1
            remove_points_after_sample: False
            gt_drop_percentage: 0.0
            gt_drop_max_keep_points: 15
            remove_unknow_examples: False
            remove_environment: False
            db_sampler:
                enable: True
                db_info_path: "/data/datasets/KITTI/object/dbinfos_train.pkl"
                db_preprocess_steps:
                    filter_by_min_num_points:
                        type: "filter_by_min_num_points"
                        classes: ["Car",] 
                        values: [5,]
                    filter_by_difficulty:
                        type: "filter_by_difficulty"
                        value: [-1,]
                global_random_rotation_range_per_object: [0, 0]
                rate: 1.0
                sample_groups:
                     classes: ["Car",] 
                     values: [15, ]

    eval:
        batch_size: 6
        dataset:
            type: "KittiDataset"
            root_path: "/data/datasets/KITTI/object"
            info_path: "/data/datasets/KITTI/object/kitti_infos_val.pkl"
            nsweeps: 1
        preprocess:
            max_num_voxels: 60000
            shuffle: False
            num_workers: 3
            anchor_area_threshold: -1
            remove_environment: False

box_coder:
    type: "ground_box3d_coder"
    value:
        n_dim: 7
        linear_dim: False
        encode_angle_vector: False

target_assigner:
    anchor_generators:
        anchor_types: ["anchor_generator_range",]
        anchor_sizes: [[1.6, 3.9, 1.56],]
        anchor_dims: [7,]
        anchor_ranges: [[0, -40.0, -2.2, 70.4, 40.0, 0.8],]
        anchor_rotations: [[0, 1.57],]
        anchor_matched_thresholds: [0.6,]
        anchor_unmatched_thresholds: [0.45,]
        anchor_class_names: ["Car",]
        sample_positive_fraction: -1
        sample_size: 512
        region_similarity_calculator: 
            type: "nearest_iou_similarity"
            value: 0
model:
    encoder:
        vfe:
            type: "VoxelFeatureExtractorV3" #"SimpleVoxel"
            num_filters: [16,]
            with_distance: False
            num_input_features: 4
        middle:
            type: "SpMiddleFHD"
            num_filters_down1: []
            num_filters_down2: []
            downsample_factor: 8
            num_input_features: 4
    decoder:
        rpn:
            type: "RPNV2"
            layer_nums: [5]
            downsample_layer_strides: [1]
            downsample_num_filters: [128]
            upsample_layer_strides: [1]
            upsample_num_filters: [128]
            group_norm: False
            num_groups: 32
            num_input_features: 128
        head:
            tasks:
                num_classes: [1]
                class_names: [["car"],]
            weights: [1,]
        auxiliary:
            use_direction_classifier: True
            direction_offset: 0.0
    post_process:
        post_center_limit_range: [0, -40.0, -5.0, 70.4, 40.0, 5.0]
        use_rotate_nms: True
        use_multi_class_nms: False
        nms_pre_max_size: 1000
        nms_post_max_size: 100
        nms_score_threshold: 0.4
        nms_iou_threshold: 0.01

    loss:
        loss_scale_factor: -1
        loss_norm_type: "NormByNumPositives"
        pos_class_weight: 1.0
        neg_class_weight: 1.0
        use_sigmoid_score: True
        encode_background_as_zeros: True
        encode_rad_error_by_sin: True
        classification_loss:
            type: "weighted_sigmoid_focal"
            value: 
                alpha: 0.25
                gamma: 2.0
                anchorwise_output: True
        localization_loss:
            type: "weighted_smooth_l1"
            value: 
                sigma: 3.0
                code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        classification_loss_weight: 1.0
        localization_loss_weight: 1.0
        direction_loss_weight: 0.2
        rpn_thresholds: [0.1,0.3,0.5,0.7,0.8,0.9]

optimizer:
    type: "adam"
    value: 
        lr:
            type: "one_cycle"
            value: 
                lr_max: 2.25e-3
                moms: [0.95, 0.85]
                div_factor: 10.0
                pct_start: 0.4
        amsgrad: 0.0
        wd: 0.01
    fixed_wd: True
    moving_average: False

2019-06-02 10:54:57,513 Training INFO: Enable db sampler: db_sampler
2019-06-02 10:54:57,513 Training INFO: db_filter_by_min_num_points: {'Car': 5}
2019-06-02 10:54:57,513 Training INFO: db_filter_by_removed_difficulties: [-1]
2019-06-02 10:54:57,606 Training INFO: load 2207 Pedestrian database infos
2019-06-02 10:54:57,606 Training INFO: load 14357 Car database infos
2019-06-02 10:54:57,606 Training INFO: load 734 Cyclist database infos
2019-06-02 10:54:57,606 Training INFO: load 1297 Van database infos
2019-06-02 10:54:57,606 Training INFO: load 488 Truck database infos
2019-06-02 10:54:57,606 Training INFO: load 224 Tram database infos
2019-06-02 10:54:57,606 Training INFO: load 337 Misc database infos
2019-06-02 10:54:57,606 Training INFO: load 56 Person_sitting database infos
2019-06-02 10:54:57,632 Training INFO: After filter database:
2019-06-02 10:54:57,633 Training INFO: load 2207 Pedestrian database infos
2019-06-02 10:54:57,633 Training INFO: load 13442 Car database infos
2019-06-02 10:54:57,633 Training INFO: load 734 Cyclist database infos
2019-06-02 10:54:57,633 Training INFO: load 1297 Van database infos
2019-06-02 10:54:57,633 Training INFO: load 488 Truck database infos
2019-06-02 10:54:57,633 Training INFO: load 224 Tram database infos
2019-06-02 10:54:57,633 Training INFO: load 337 Misc database infos
2019-06-02 10:54:57,633 Training INFO: load 56 Person_sitting database infos
2019-06-02 10:54:57,634 Training INFO: feature_map_size: [1, 200, 176]
2019-06-02 10:54:57,823 Training INFO: 3 workers per GPU for dataloader
2019-06-02 10:54:57,995 Training INFO: Using direction offset 0.000000 to fix aoe
2019-06-02 10:54:57,996 Training INFO: Voxel Feature Encoder: VoxelFeatureExtractorV3
2019-06-02 10:54:57,996 Training INFO: Middle class name: SpMiddleFHD
2019-06-02 10:54:58,009 Training INFO: RPN class name: RPNV2
2019-06-02 10:54:58,018 Training INFO: num_classes: [1]
2019-06-02 10:54:58,018 Training INFO: num_preds: [14]
2019-06-02 10:54:58,018 Training INFO: num_dirs: [4]
2019-06-02 10:54:58,019 Training INFO: Finish RPNBase Initialization
2019-06-02 10:54:58,024 Training INFO: Using SyncBn
2019-06-02 10:54:58,333 Training INFO: Model Articutures: DistributedDataParallel(
  (module): VoxelNet(
    (_voxel_feature_extractor): VoxelFeatureExtractorV3()
    (_middle_feature_extractor): SpMiddleFHD(
      (middle_conv): SparseSequential(
        (0): DefaultArgLayer()
        (1): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): DefaultArgLayer()
        (4): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): DefaultArgLayer()
        (7): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): DefaultArgLayer()
        (10): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU()
        (12): DefaultArgLayer()
        (13): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU()
        (15): DefaultArgLayer()
        (16): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU()
        (18): DefaultArgLayer()
        (19): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (20): ReLU()
        (21): DefaultArgLayer()
        (22): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (23): ReLU()
        (24): DefaultArgLayer()
        (25): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (26): ReLU()
        (27): DefaultArgLayer()
        (28): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (29): ReLU()
        (30): DefaultArgLayer()
        (31): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (32): ReLU()
        (33): DefaultArgLayer()
        (34): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (35): ReLU()
        (36): DefaultArgLayer()
        (37): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (38): ReLU()
        (39): DefaultArgLayer()
        (40): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (41): ReLU()
      )
    )
    (_rpn): RPNV2(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): DefaultArgLayer(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (tasks): ModuleList(
        (0): RPNHead(
          (conv_box): Conv2d(128, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_cls): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_dir): Conv2d(128, 4, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (rpn_acc): Accuracy()
    (rpn_precision): Precision()
    (rpn_recall): Recall()
    (rpn_metrics): PrecisionRecall()
    (rpn_cls_loss): Scalar()
    (rpn_loc_loss): Scalar()
    (rpn_total_loss): Scalar()
  )
)
2019-06-02 10:54:58,334 Training INFO: No checkpoint found. Initializing model from scratch
2019-06-02 10:54:58,335 Training INFO: extra arguments: {'iteration': 0, 'epoch': 0}
2019-06-02 10:54:58,335 Training INFO: total training steps: 30933
2019-06-02 10:55:42,092 3d-object-detection INFO: Using 6 GPUs
2019-06-02 10:55:42,093 3d-object-detection INFO: Namespace(cfg='configs/car_fhd_kitti.yaml', distributed=True, local_rank=0, model_dir='kitti')
2019-06-02 10:55:42,093 3d-object-detection INFO: Collecting env info (might take some time)
2019-06-02 10:55:46,444 3d-object-detection INFO: 
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: version 3.13.4

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration: 
GPU 0: GeForce RTX 2080 Ti
GPU 1: GeForce RTX 2080 Ti
GPU 2: GeForce RTX 2080 Ti
GPU 3: GeForce RTX 2080 Ti
GPU 4: GeForce RTX 2080 Ti
GPU 5: GeForce RTX 2080 Ti
GPU 6: GeForce RTX 2080 Ti
GPU 7: GeForce RTX 2080 Ti

Nvidia driver version: 418.40.04
cuDNN version: /data/cuda/cuda-10.0/cudnn/v7.5.0/lib64/libcudnn.so.7.5.0

Versions of relevant libraries:
[pip3] numpy==1.16.2
[pip3] numpydoc==0.8.0
[pip3] torch==1.1.0
[pip3] torchvision==0.3.0
[conda] blas                      1.0                         mkl  
[conda] mkl                       2019.3                      199  
[conda] mkl-service               1.1.2            py37he904b0f_5  
[conda] mkl_fft                   1.0.10           py37ha843d7b_0  
[conda] mkl_random                1.0.2            py37hd81dba3_0  
[conda] torch                     1.1.0                    pypi_0    pypi
[conda] torchvision               0.3.0                    pypi_0    pypi
        Pillow (5.4.1)
2019-06-02 10:55:46,445 3d-object-detection INFO: 
local_rank: 0
input:
    num_point_features: 4
    voxel:
        voxel_size: [0.05, 0.05, 0.1]
        point_cloud_range: [0, -40.0, -3.0, 70.4, 40.0, 1.0]
        max_num_points: 5
    train:
        batch_size: 2
        num_epochs: 100
        dataset:
            type: "KittiDataset"
            root_path: "/data/datasets/KITTI/object"
            info_path: "/data/datasets/KITTI/object/kitti_infos_train.pkl"
            nsweeps: 1
        preprocess:
            max_num_voxels: 40000
            shuffle: False
            num_workers: 3
            gt_location_noise: [1.0, 1.0, 0.5]
            gt_rotation_noise: [-0.78539816, 0.78539816]
            global_rotation_noise: [-0.78539816, 0.78539816]
            global_scale_noise: [0.95, 1.05]
            global_rotation_per_object_range: [0, 0]
            global_translation_noise: [0, 0, 0]
            anchor_area_threshold: -1
            remove_points_after_sample: False
            gt_drop_percentage: 0.0
            gt_drop_max_keep_points: 15
            remove_unknow_examples: False
            remove_environment: False
            db_sampler:
                enable: True
                db_info_path: "/data/datasets/KITTI/object/dbinfos_train.pkl"
                db_preprocess_steps:
                    filter_by_min_num_points:
                        type: "filter_by_min_num_points"
                        classes: ["Car",] 
                        values: [5,]
                    filter_by_difficulty:
                        type: "filter_by_difficulty"
                        value: [-1,]
                global_random_rotation_range_per_object: [0, 0]
                rate: 1.0
                sample_groups:
                     classes: ["Car",] 
                     values: [15, ]

    eval:
        batch_size: 6
        dataset:
            type: "KittiDataset"
            root_path: "/data/datasets/KITTI/object"
            info_path: "/data/datasets/KITTI/object/kitti_infos_val.pkl"
            nsweeps: 1
        preprocess:
            max_num_voxels: 60000
            shuffle: False
            num_workers: 3
            anchor_area_threshold: -1
            remove_environment: False

box_coder:
    type: "ground_box3d_coder"
    value:
        n_dim: 7
        linear_dim: False
        encode_angle_vector: False

target_assigner:
    anchor_generators:
        anchor_types: ["anchor_generator_range",]
        anchor_sizes: [[1.6, 3.9, 1.56],]
        anchor_dims: [7,]
        anchor_ranges: [[0, -40.0, -2.2, 70.4, 40.0, 0.8],]
        anchor_rotations: [[0, 1.57],]
        anchor_matched_thresholds: [0.6,]
        anchor_unmatched_thresholds: [0.45,]
        anchor_class_names: ["Car",]
        sample_positive_fraction: -1
        sample_size: 512
        region_similarity_calculator: 
            type: "nearest_iou_similarity"
            value: 0
model:
    encoder:
        vfe:
            type: "VoxelFeatureExtractorV3" #"SimpleVoxel"
            num_filters: [16,]
            with_distance: False
            num_input_features: 4
        middle:
            type: "SpMiddleFHD"
            num_filters_down1: []
            num_filters_down2: []
            downsample_factor: 8
            num_input_features: 4
    decoder:
        rpn:
            type: "RPNV2"
            layer_nums: [5]
            downsample_layer_strides: [1]
            downsample_num_filters: [128]
            upsample_layer_strides: [1]
            upsample_num_filters: [128]
            group_norm: False
            num_groups: 32
            num_input_features: 128
        head:
            tasks:
                num_classes: [1]
                class_names: [["car"],]
            weights: [1,]
        auxiliary:
            use_direction_classifier: True
            direction_offset: 0.0
    post_process:
        post_center_limit_range: [0, -40.0, -5.0, 70.4, 40.0, 5.0]
        use_rotate_nms: True
        use_multi_class_nms: False
        nms_pre_max_size: 1000
        nms_post_max_size: 100
        nms_score_threshold: 0.4
        nms_iou_threshold: 0.01

    loss:
        loss_scale_factor: -1
        loss_norm_type: "NormByNumPositives"
        pos_class_weight: 1.0
        neg_class_weight: 1.0
        use_sigmoid_score: True
        encode_background_as_zeros: True
        encode_rad_error_by_sin: True
        classification_loss:
            type: "weighted_sigmoid_focal"
            value: 
                alpha: 0.25
                gamma: 2.0
                anchorwise_output: True
        localization_loss:
            type: "weighted_smooth_l1"
            value: 
                sigma: 3.0
                code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        classification_loss_weight: 1.0
        localization_loss_weight: 1.0
        direction_loss_weight: 0.2
        rpn_thresholds: [0.1,0.3,0.5,0.7,0.8,0.9]

optimizer:
    type: "adam"
    value: 
        lr:
            type: "one_cycle"
            value: 
                lr_max: 2.25e-3
                moms: [0.95, 0.85]
                div_factor: 10.0
                pct_start: 0.4
        amsgrad: 0.0
        wd: 0.01
    fixed_wd: True
    moving_average: False

2019-06-02 10:55:46,446 Training INFO: Enable db sampler: db_sampler
2019-06-02 10:55:46,446 Training INFO: db_filter_by_min_num_points: {'Car': 5}
2019-06-02 10:55:46,446 Training INFO: db_filter_by_removed_difficulties: [-1]
2019-06-02 10:55:46,539 Training INFO: load 2207 Pedestrian database infos
2019-06-02 10:55:46,539 Training INFO: load 14357 Car database infos
2019-06-02 10:55:46,539 Training INFO: load 734 Cyclist database infos
2019-06-02 10:55:46,539 Training INFO: load 1297 Van database infos
2019-06-02 10:55:46,539 Training INFO: load 488 Truck database infos
2019-06-02 10:55:46,539 Training INFO: load 224 Tram database infos
2019-06-02 10:55:46,539 Training INFO: load 337 Misc database infos
2019-06-02 10:55:46,539 Training INFO: load 56 Person_sitting database infos
2019-06-02 10:55:46,566 Training INFO: After filter database:
2019-06-02 10:55:46,566 Training INFO: load 2207 Pedestrian database infos
2019-06-02 10:55:46,566 Training INFO: load 13442 Car database infos
2019-06-02 10:55:46,566 Training INFO: load 734 Cyclist database infos
2019-06-02 10:55:46,566 Training INFO: load 1297 Van database infos
2019-06-02 10:55:46,566 Training INFO: load 488 Truck database infos
2019-06-02 10:55:46,566 Training INFO: load 224 Tram database infos
2019-06-02 10:55:46,566 Training INFO: load 337 Misc database infos
2019-06-02 10:55:46,567 Training INFO: load 56 Person_sitting database infos
2019-06-02 10:55:46,568 Training INFO: feature_map_size: [1, 200, 176]
2019-06-02 10:55:46,774 Training INFO: 3 workers per GPU for dataloader
2019-06-02 10:55:46,949 Training INFO: Using direction offset 0.000000 to fix aoe
2019-06-02 10:55:46,950 Training INFO: Voxel Feature Encoder: VoxelFeatureExtractorV3
2019-06-02 10:55:46,950 Training INFO: Middle class name: SpMiddleFHD
2019-06-02 10:55:46,962 Training INFO: RPN class name: RPNV2
2019-06-02 10:55:46,971 Training INFO: num_classes: [1]
2019-06-02 10:55:46,971 Training INFO: num_preds: [14]
2019-06-02 10:55:46,972 Training INFO: num_dirs: [4]
2019-06-02 10:55:46,972 Training INFO: Finish RPNBase Initialization
2019-06-02 10:55:46,977 Training INFO: Using SyncBn
2019-06-02 10:55:46,991 Training INFO: Model Articutures: DistributedDataParallel(
  (module): VoxelNet(
    (_voxel_feature_extractor): VoxelFeatureExtractorV3()
    (_middle_feature_extractor): SpMiddleFHD(
      (middle_conv): SparseSequential(
        (0): DefaultArgLayer()
        (1): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): DefaultArgLayer()
        (4): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): DefaultArgLayer()
        (7): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): DefaultArgLayer()
        (10): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU()
        (12): DefaultArgLayer()
        (13): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU()
        (15): DefaultArgLayer()
        (16): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU()
        (18): DefaultArgLayer()
        (19): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (20): ReLU()
        (21): DefaultArgLayer()
        (22): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (23): ReLU()
        (24): DefaultArgLayer()
        (25): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (26): ReLU()
        (27): DefaultArgLayer()
        (28): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (29): ReLU()
        (30): DefaultArgLayer()
        (31): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (32): ReLU()
        (33): DefaultArgLayer()
        (34): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (35): ReLU()
        (36): DefaultArgLayer()
        (37): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (38): ReLU()
        (39): DefaultArgLayer()
        (40): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (41): ReLU()
      )
    )
    (_rpn): RPNV2(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): DefaultArgLayer(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): DefaultArgLayer(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (tasks): ModuleList(
        (0): RPNHead(
          (conv_box): Conv2d(128, 14, kernel_size=(1, 1), stride=(1, 1))
          (conv_cls): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_dir): Conv2d(128, 4, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (rpn_acc): Accuracy()
    (rpn_precision): Precision()
    (rpn_recall): Recall()
    (rpn_metrics): PrecisionRecall()
    (rpn_cls_loss): Scalar()
    (rpn_loc_loss): Scalar()
    (rpn_total_loss): Scalar()
  )
)
2019-06-02 10:55:46,993 Training INFO: No checkpoint found. Initializing model from scratch
2019-06-02 10:55:46,993 Training INFO: extra arguments: {'iteration': 0, 'epoch': 0}
2019-06-02 10:55:46,993 Training INFO: total training steps: 30933
